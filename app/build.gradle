apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'de.mobilej.unmock'
apply plugin: 'spoon'
apply plugin: 'com.getkeepsafe.dexcount'

def includeFirebase = hasProperty("isCI") || hasProperty("firebase") || true

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"

    defaultConfig {
        applicationId "org.walleth"

        minSdkVersion 15
        targetSdkVersion 26

        versionCode 17
        versionName "0.17"
        archivesBaseName = "WALLETH-$versionName"

        testInstrumentationRunner "org.walleth.infrastructure.AppReplacingRunner"
        vectorDrawables.useSupportLibrary = true

        buildConfigField "String", "ETHERSCAN_APIKEY", '"' + file('../.ci/etherscan.apikey').text + '"'

        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        warning 'InvalidPackage' // for OKIO
        warning 'MissingTranslation'
    }

    flavorDimensions "fire", "store"

    productFlavors {
        forFDroid {
            dimension "store"
            buildConfigField 'String', 'STORE', '"fdroid"'
        }

        forAmazon {
            dimension "store"
            buildConfigField 'String', 'STORE', '"amazon"'
        }

        forPlay {
            dimension "store"
            buildConfigField 'String', 'STORE', '"play"'
        }

        if (includeFirebase) {
            withFirebase {
                dimension "fire"
            }
        }

        noFirebase {
            dimension "fire"
        }

    }


    android.variantFilter { variant ->
        def firebase = variant.getFlavors().get(0).name
        def store = variant.getFlavors().get(1).name

        if ((project.hasProperty("singleFlavor") && (store != 'forPlay'))
                || ((store == 'forAmazon' || store == 'forPlay') && firebase == 'noFirebase')
                || (store == 'forFDroid' && firebase != 'noFirebase')) {
            variant.setIgnore(true)
        }
    }

}

spoon {
    debug = true
    grantAllPermissions = true
}

configurations {

    // http://stackoverflow.com/questions/30578243/why-would-adding-espresso-contrib-cause-an-inflateexception
    androidTestCompile.exclude group: 'com.android.support', module: 'appcompat-v7'
    androidTestCompile.exclude group: 'com.android.support', module: 'design'
    androidTestCompile.exclude group: 'com.android.support', module: 'support-v4'
    androidTestCompile.exclude group: 'com.android.support', module: 'support-annotations'
    androidTestCompile.exclude group: 'com.android.support', module: 'preference-v7'
    androidTestCompile.exclude module: 'recyclerview-v7'
    androidTestCompile.exclude module: 'kotlin-stdlib'
}

dependencies {
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-android:0.20-alpha-2"
    compile 'com.android.support:multidex:1.0.2'
    androidTestCompile 'com.android.support:multidex:1.0.2'
    androidTestCompile 'com.android.support:multidex-instrumentation:1.0.2'

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    compile "org.ethereum:geth:1.7.1"

    compile "com.github.ligi.kethereum:functions:$kethereum_version"
    compile "com.github.ligi.kethereum:bip44:$kethereum_version"
    compile "com.github.ligi.kethereum:erc55:$kethereum_version"
    compile "com.github.ligi.kethereum:erc67:$kethereum_version"

    compile 'com.github.ligi:tracedroid:1.4'
    compile 'com.github.ligi:KAXT:0.18'
    compile 'com.github.ligi:KAXTUI:0.4'
    compile 'com.github.trezor.trezor-android:trezor-lib:v1.0.6'


    compile 'com.github.kenglxn.QRGen:android:2.3.0'
    compile 'com.google.zxing:core:3.3.0'

    compile 'com.jakewharton:process-phoenix:2.0.0'

    compile 'com.jakewharton.threetenabp:threetenabp:1.0.5'
    compile 'com.squareup.okhttp3:okhttp:3.9.0'

    compile 'com.github.salomonbrys.kodein:kodein:4.1.0'
    compile 'com.github.salomonbrys.kodein:kodein-android:4.1.0'

    compile "com.android.support:appcompat-v7:$support_version"
    compile "com.android.support:design:$support_version"
    compile "com.android.support:cardview-v7:$support_version"
    compile "com.android.support:recyclerview-v7:$support_version"
    compile "com.android.support:preference-v14:$support_version"

    compile "com.chibatching.kotpref:kotpref:2.2.0"

    compile 'com.squareup.moshi:moshi:1.5.0'
    compile 'com.github.ligi:ExtraCompats:0.4'
    compile 'com.github.ligi:KRoom:0.4'

    compile "android.arch.lifecycle:extensions:1.0.0-beta2"

    compile "android.arch.persistence.room:runtime:1.0.0-beta2"
    kapt "android.arch.persistence.room:compiler:1.0.0-beta2"

    kapt "android.arch.lifecycle:compiler:1.0.0-beta2"

    androidTestCompile 'com.google.truth:truth:0.36'

    androidTestCompile "org.mockito:mockito-core:2.8.47"
    androidTestCompile 'com.linkedin.dexmaker:dexmaker-mockito:2.2.0'

    androidTestCompile 'com.android.support.test.espresso:espresso-contrib:3.0.1'
    androidTestCompile 'com.github.ligi:trulesk:0.21'

    testCompile 'junit:junit:4.12'
    testCompile 'com.google.truth:truth:0.36'
    testCompile 'org.threeten:threetenbp:1.3.6'

    if (includeFirebase) {
        withFirebaseCompile "com.google.firebase:firebase-core:$firebase_version"
        withFirebaseCompile "com.google.firebase:firebase-crash:$firebase_version"
        withFirebaseCompile "com.google.firebase:firebase-messaging:$firebase_version"
    }
}

if (hasProperty("isCI")) {

    apply plugin: 'witness'

    dependencyVerification {
        verify = [
                'com.android.support:multidex:7cd48755c7cfdb6dd2d21cbb02236ec390f6ac91cde87eb62f475b259ab5301d',

                'com.github.ligi:KAXTUI:7bd3745979d8db21010846303339e2debec5ab77c5c9323f136d70c093c1017a',
                'com.github.salomonbrys.kodein:kodein:6727cb851a73a82fd5ded29877739749f7f89c26a23ababaf9a06d7cf9aa7bee',
                'com.github.salomonbrys.kodein:kodein-android:98b1998e2477eb715720ddf7f016a1b828ceb87c1f11ce72dad3d518629a0330',
                'com.github.salomonbrys.kodein:kodein-core:4876960b936d6becb00e7b5c614ba9f4be2b7d5d22a8a2433583d87373c342f8',
                'com.github.walleth:keccak:1c03589f2f883dacf343689a5311f1ecf13710f115ac755e18277b70e5357435',
                'com.github.walleth:khex:a3a93680c8b0bd60ef226651ad5eb401fa18f65d0941c3ea6464b8adfa693d1e',

                'com.github.ligi:tracedroid:7166d047a3622676357645414751d911b0e507e78d0a9102e38b7500a44fda8b',
                'com.github.trezor.trezor-android:trezor-lib:6ac8601798e851191a1c33673d8b804b836cdfd9788b289a41ec9c3655b3e91c',
                'com.github.kenglxn.QRGen:android:7670317f4ec37cf2bb24b7d3932da83daafa2956e77cd2e92dccce86a66816d9',
                'com.github.kenglxn.QRGen:core:1db3f51189a71bb37ee0e97081a353b6c6b203ee73bb93c4372aa76e94f9d701',
                'com.google.zxing:core:bba7724e02a997cec38213af77133ee8e24b0d5cf5fa7ecbc16a4fa93f11ee0d',
                'com.jakewharton:process-phoenix:229c481a90067878d9b0bceee54600fe2ea48a771c6ff1fb47f0d865cf660844',
                'com.jakewharton.threetenabp:threetenabp:44b81823de861287f666c92a61c9e55259350f5bff588fec7819027a0291ddbf',

                'com.squareup.moshi:moshi:91e9c49dc282f1e22570ad3cff7178b00a22180749c8427083ec9be2322c064e',
                'com.github.ligi:ExtraCompats:3e4315f0f3b35e6e6dd5f37494480fd7ceaa09546c4361c7e7ff5b8563c936e0',
                'com.google.firebase:firebase-core:5bada1df52cef9ea7e5235cc956066050e155408bdd09b1ef051e56a24719da6',
                'org.jetbrains:annotations:ace2a10dc8e2d5fd34925ecac03e4988b2c0f851650c94b8cef49ba1bd111478',
                'com.google.firebase:firebase-analytics:08f31410a360ff7a89377aa5cb92cbf9d828fc1762fd6f9763687e72699cc4c6',
                'com.google.firebase:firebase-analytics-impl:51be41be81ada9e55c2edd0c9a39bf00178398183990ac873a23c94280a6a897',
                'com.google.firebase:firebase-iid:7398bcef69d9aa39f4021ea2ed404ba9c8a2d131d73b10fa7c4ee3d8cd0803a4',
                'com.google.firebase:firebase-common:609bbd12cb71d9739d922f3571f3afb6ac0aba1daa64a37f0c37b6af98ba40a5',
                'com.google.android.gms:play-services-tasks:f0b0a8bbd007f226ac49f0e9cc9712952acbc01ce377d08d1a8c4f8d8c6e6e37',
                'com.google.android.gms:play-services-basement:76d87a4afcea71987d4087f85d989a06366f4e146ebb066ebbe8ba612d71c4e3',
                'com.google.protobuf:protobuf-java:f3411ade77523d5f0d013d4f25c36879e66f0c5e1e4310f7096d54d0d2553554',
                'com.jakewharton.timber:timber:d553d3d3e883ce7d061f1b21b95d6ee0840f3bfbf6d3bd51c5671f0b0f0b0091',
                'org.threeten:threetenbp:dfb095d318c266673f6db2c89648fa73995343a2f2705e68ab2c63c99035f102',
                'com.squareup.okio:okio:734269c3ebc5090e3b23566db558f421f0b4027277c79ad5d176b8ec168bb850',
        ]
    }

}
if (includeFirebase) {
    apply plugin: 'com.google.gms.google-services'
}

apply plugin: 'com.github.ben-manes.versions'

kotlin {
    experimental {
        coroutines "enable"
    }
}